# The environment name condition should use 'if' instead of '=='
name: SAM CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: read
  id-token: write 

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      # Add SAM CLI installation
      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          version: 1.143.0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # pip cache
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Lint with flake8
        run: |
          flake8 . --show-source --statistics

      - name: Run unit tests with pytest
        run: |
          pytest tests/

      - name: Build with SAM
        run: |
          sam build

  deploy:
    if: github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name == 'main' || 'prod' }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          version: latest

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.SAM_ROLE_NAME }}
          role-session-name: github-${{ github.actor }}-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: SAM Validate
        run: |
          sam validate
      
      - name: SAM Build
        run: |
          sam build

      # The 'sam deploy' command automatically packages the application before deploying
      # Starting with SAM CLI v1.0, packaging is integrated into the deploy step
      # --resolve-s3 flag automatically creates/uses an S3 bucket for deployment artifacts
      - name: SAM package and deploy
        run: |
          sam deploy --config-env ${{ github.ref_name }} --no-confirm-changeset --resolve-s3
